argo-workflows:
  singleNamespace: true
  createAggregateRoles: false
  crds:
    install: true
  controller:
    replicas: 2
    clusterWorkflowTemplates:
      enabled: false
    image: {}
      # registry: our-harbor-cache/quay.io
    metricsConfig:
      enabled: true
    telemetryConfig:
      enabled: true
    serviceMonitor:
      enabled: false
    workflowDefaults:
      spec:
        serviceAccountName: argo-workflow
    workflowNamespaces:
      - argo
      - default
  executor:
    image: {}
      # registry: our-harbor-cache/quay.io
  server:
    secure: true
    replicas: 2
    clusterWorkflowTemplates:
      enabled: false
    image: {}
      # registry: our-harbor-cache/quay.io
    ingress:
      enabled: false
      hosts:
      - redacted
      tls:
      - hosts:
        - redacted
    extraArgs:
    # - --auth-mode=sso
    - --auth-mode=server
    # extraEnv:
    # - name: SSO_DELEGATE_RBAC_TO_NAMESPACE
    #   value: 'true'
    # sso:
    #   issuer: redacted
    #   redirectURL: redacted
    #   scopes:
    #   - profile
    #   - groups
    #   - email
    #   - offline_access
    #   - openid
    #   clientId:
    #     name: argo-workflows-oidc
    #     key: CLIENT_ID
    #   clientSecret:
    #     name: argo-workflows-oidc
    #     key: CLIENT_SECRET
    #   rbac:
    #     enabled: true
  useDefaultArtifactRepo: true
  workflow:
    serviceAccount:
      create: true
    rbac:
      # -- Adds Role and RoleBinding for the above specified service account to be able to run workflows.
      # A Role and Rolebinding pair is also created for each namespace in controller.workflowNamespaces (see below)
      create: true
